name: Update config

on:
  repository_dispatch:
    types:
      - update_bridge_image
      - update_simulator_image
      - update_linetrace_control_image
      - update_teleop_key_image

jobs:
  update_config:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_REPO_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_REPO_ACCESS_TOKEN }}

      - name: Check if PR exists
        id: check_pr
        run: |
          echo "count=`gh pr list -S 'Auto update config.yaml'in:title | wc -l`" >> $GITHUB_OUTPUT

      - name: Create or checkout branch
        run: |
          if [ ${{ steps.check_pr.outputs.count }} == 0 ]; then
            if git ls-remote --exit-code --heads origin feature/auto_update_config; then
              git push origin --delete feature/auto_update_config
            fi
            git fetch
            git checkout -b feature/auto_update_config
          else
            git fetch
            git checkout feature/auto_update_config
          fi

      - name: Setup yq
        run: |
          mkdir -p ${{ github.workspace }}/bin
          wget https://github.com/mikefarah/yq/releases/download/v4.31.1/yq_linux_386 -O ${{ github.workspace }}/bin/yq
          chmod +x ${{ github.workspace }}/bin/yq
          echo ${{ github.workspace }}/bin >> $GITHUB_PATH

      - name: Update bridge tag
        if: github.event.event_type == update_bridge_image
        run: |
          yq -i eval '.images.bridge.tag = "${{ github.event.client_payload.tag }}"' config.yaml

      - name: Update simulator tag
        if: github.event.event_type == update_simulator_image
        run: |
          yq -i eval '.images.simulator.tag = "${{ github.event.client_payload.tag }}"' config.yaml

      - name: Update linetrace_control tag
        if: github.event.event_type == update_linetrace_control_image
        run: |
          yq -i eval '.images.linetrace_control.tag = "${{ github.event.client_payload.tag }}"' config.yaml

      - name: Update teleop_key tag
        if: github.event.event_type == update_teleop_key_image
        run: |
          yq -i eval '.images.teleop_key.tag = "${{ github.event.client_payload.tag }}"' config.yaml

      - name: Commit and push branch
        run: |
          git config user.email "noreply@exmotion.co.jp"
          git config user.name "bot"
          git add config.yaml
          git commit -m "Update config.yaml"
          git push origin feature/auto_update_config

      - name: Create pull request
        if: ${{ steps.check_pr.outputs.count == 0 }}
        run: |
          gh pr create \
            -B main \
            -t "Auto update config.yaml" \
            -b "This PR is automatically created by GitHub Actions workflow"
